# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

jobs:

- job: 'Test_Linux'
  pool:
    vmImage: 'Ubuntu-16.04'
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
    maxParallel: 2

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: |
      python -m pip install --upgrade pip
      pip install poetry
      poetry install
    displayName: 'Install Dependencies'

  - script: make format
    displayName: 'black'

  - script: make lint
    displayName: 'pylint'

  - script: make mypy
    displayName: 'mypy'

  - script: make ci-test
    displayName: 'pytest'
    env:
      CODECOV_TOKEN: '6d3203bd-9965-40a1-9042-32ae8023fcc8'

- job: 'Test_Windows'
  pool:
    vmImage: 'vs2017-win2016'
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
    maxParallel: 2

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: |
      python -m pip install --upgrade pip
      pip install poetry
      poetry install
    displayName: 'Install Dependencies'

  - script: |
      make ci-test
    displayName: 'pytest'
